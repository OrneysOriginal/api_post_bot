services:
  web:
    build: .
    container_name: web
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

  bot:
    build: .
    command: python3 -m app.tg_bot.bot
    depends_on:
      web:
        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: postgres
    env_file:
      - "./.env"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    build: .
    command: alembic upgrade head
    depends_on:
      postgres:
        condition: service_healthy
      web:
        condition: service_healthy